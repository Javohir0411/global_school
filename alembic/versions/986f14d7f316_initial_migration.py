"""Initial migration

Revision ID: 986f14d7f316
Revises: 
Create Date: 2025-04-24 18:01:56.601798

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '986f14d7f316'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_firstname', sa.String(), nullable=False),
    sa.Column('student_lastname', sa.String(), nullable=False),
    sa.Column('student_phone_number', sa.String(), nullable=False),
    sa.Column('student_parents_fullname', sa.String(), nullable=False),
    sa.Column('student_parents_phone_number', sa.String(), nullable=False),
    sa.Column('student_additional_info', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_name', sa.String(), nullable=False),
    sa.Column('lesson_time', sa.String(), nullable=False),
    sa.Column('lesson_days', sa.String(), nullable=False),
    sa.Column('group_subject_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['group_subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('payment_amount', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_firstname', sa.String(), nullable=False),
    sa.Column('teacher_lastname', sa.String(), nullable=False),
    sa.Column('teacher_phone_number', sa.String(), nullable=False),
    sa.Column('teacher_subject_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['teacher_subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('attendance_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('PRESENT', 'ABSENT', 'LATE', name='attendanceenum'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_group_association',
    sa.Column('students_id', sa.Integer(), nullable=False),
    sa.Column('groups_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['groups_id'], ['groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['students_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('students_id', 'groups_id')
    )
    op.create_table('teacher_group_association',
    sa.Column('teachers_id', sa.Integer(), nullable=False),
    sa.Column('groups_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['groups_id'], ['groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teachers_id'], ['teachers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teachers_id', 'groups_id')
    )
    op.create_table('teacher_students_association',
    sa.Column('teachers_id', sa.Integer(), nullable=False),
    sa.Column('students_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['students_id'], ['students.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teachers_id'], ['teachers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teachers_id', 'students_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teacher_students_association')
    op.drop_table('teacher_group_association')
    op.drop_table('student_group_association')
    op.drop_table('attendance')
    op.drop_table('teachers')
    op.drop_table('payments')
    op.drop_table('groups')
    op.drop_table('subjects')
    op.drop_table('students')
    # ### end Alembic commands ###
